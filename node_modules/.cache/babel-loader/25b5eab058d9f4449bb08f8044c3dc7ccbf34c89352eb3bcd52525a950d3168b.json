{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Projects\\\\Food-Donate-main\\\\src\\\\Components\\\\DashBoard\\\\Donations\\\\RequestListing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, push, set, onValue } from 'firebase/database';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport DonationHeader from \"./DonationHeader\";\nimport Footer from '../../Footer/footer';\nimport '../../css/RequestForm.css';\nimport \"../../css/donationHeader.css\";\nimport \"../../css/Request.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestListing = ({\n  dashboardView,\n  handleLocationClick\n}) => {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [userName, setUserName] = useState(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    location: '',\n    expirationDate: '',\n    foodType: '',\n    foodQuantity: '',\n    foodWeight: '',\n    pickupDateTime: ''\n  });\n  const [tableData, setTableData] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  useEffect(() => {\n    const db = getDatabase();\n    const requestsRef = ref(db, 'donationRequests');\n\n    // Fetch data from Firebase on component mount\n    onValue(requestsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const requestsArray = Object.entries(data).map(([requestId, requestData]) => ({\n          requestId,\n          ...requestData\n        }));\n\n        // Apply filter based on status\n        const filteredRequests = requestsArray.filter(request => request.status !== \"received\");\n        console.log(\"Filtered Requests:\", filteredRequests);\n        setTableData(dashboardView ? filteredRequests.slice(-5) : requestsArray);\n      }\n    });\n  }, [dashboardView]);\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUserId(user.uid);\n        const db = getDatabase();\n        const userRef = ref(db, `users/${user.uid}`);\n        onValue(userRef, snapshot => {\n          const userData = snapshot.val();\n          console.log(userData);\n          if (userData && userData.account_type) {\n            setUserRole(userData.account_type);\n            setUserName(capitalizeFirstLetter(userData.first_name));\n          }\n        });\n      } else {\n        setUserId(null);\n        setUserRole(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  function capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  const getStatusButtonText = status => {\n    console.log(status);\n    switch (status) {\n      case \"pending\":\n        return \"Pending\";\n      case \"received\":\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Received\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this);\n      case \"deliver\":\n        return \"To Deliver\";\n      default:\n        return \"Unknown Status\";\n    }\n  };\n  const handleAccept = requestId => {\n    if (userRole === \"volunteer\") {\n      const db = getDatabase();\n      const requestRef = ref(db, `donationRequests/${requestId}`);\n      set(requestRef, {\n        ...tableData.find(data => data.requestId === requestId),\n        status: \"pending\",\n        deliveredBy: userId // Save the user ID of the volunteer who accepted\n      }).then(() => {\n        const updatedTableData = tableData.map(data => {\n          if (data.requestId === requestId) {\n            return {\n              ...data,\n              status: \"pending\",\n              deliveredBy: userId\n            };\n          }\n          return data;\n        });\n        setTableData(updatedTableData);\n      }).catch(error => {\n        console.error(\"Error updating status:\", error);\n      });\n    }\n  };\n  const handlePending = (requestId, status) => {\n    console.log('handlePending function called');\n    if (userRole === \"recipient\" && status === \"pending\") {\n      const db = getDatabase();\n      const requestRef = ref(db, `donationRequests/${requestId}`);\n\n      // Update the status to \"received\" in the database\n      set(requestRef, {\n        ...tableData.find(data => data.requestId === requestId),\n        status: \"received\",\n        receivedBy: userId // Save the user ID of the recipient\n      }).then(() => {\n        // Remove the item from the local state only if it is a dashboard view\n        if (dashboardView) {\n          const updatedTableData = tableData.filter(data => data.requestId !== requestId);\n          setTableData(updatedTableData);\n        }\n        alert(\"Delivery received! Status updated to received.\");\n      }).catch(error => {\n        console.error(\"Error updating status:\", error);\n      });\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    if (name === 'location') {\n      const [lan, lng] = value.split(',').map(coord => coord.trim());\n      setFormData(prevData => ({\n        ...prevData,\n        location: {\n          lan,\n          lng\n        }\n      }));\n      setCurrentLocation({\n        lan,\n        lng\n      });\n      console.log(lan, lng);\n    } else {\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleShowLocation = (lan, lng) => {\n    // Open Google Maps with the specified location\n    if (!dashboardView) {\n      window.open(`https://www.google.com/maps?q=${lan},${lng}`, '_blank');\n    }\n    // handleLocationClick(lan, lng);\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const db = getDatabase();\n    const requestsRef = ref(db, 'donationRequests');\n\n    // Add the new data to the 'requests' node in Firebase\n    const newRequestRef = push(requestsRef);\n    const currentTime = new Date();\n    set(newRequestRef, {\n      ...formData,\n      userId: userId,\n      userRole: userRole,\n      donatedBy: userId,\n      deliveredBy: \"\",\n      receivedBy: \"\",\n      status: \"deliver\",\n      time: currentTime.toISOString()\n    });\n\n    // Reset the form data and hide the form\n    setFormData({\n      title: '',\n      description: '',\n      location: '',\n      expirationDate: '',\n      foodType: '',\n      foodQuantity: '',\n      foodWeight: '',\n      pickupDateTime: ''\n    });\n    setShowForm(false);\n  };\n  const columnsForDashboard = ['title', 'description', 'foodType', 'pickupDateTime'];\n  const columnsForDonationsPage = ['title', 'description', 'expirationDate', 'foodType', 'foodQuantity', 'foodWeight', 'pickupDateTime'];\n  const displayedColumns = dashboardView ? columnsForDashboard : columnsForDonationsPage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [!dashboardView && /*#__PURE__*/_jsxDEV(DonationHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'col-md-12 pt-3',\n        children: [dashboardView && /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"title mb-3 text-secondary\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [\"Donation Requests\", userRole === \"donor\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mb-3 mt-3\",\n            onClick: () => setShowForm(true),\n            children: \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-container\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"row g-3\",\n              onSubmit: handleFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputTitle\",\n                  className: \"form-label\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"title\",\n                  placeholder: \"Enter a title\",\n                  value: formData.title,\n                  onChange: handleInputChange,\n                  required: true,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputExpirationDate\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Expiration Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  name: \"expirationDate\",\n                  value: formData.expirationDate,\n                  onChange: handleInputChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputFoodType\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Food Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"foodType\",\n                  required: true,\n                  value: formData.foodType,\n                  onChange: handleInputChange,\n                  className: \"form-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    hidden: true,\n                    children: \"Select a food type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Canned Goods\",\n                    children: \"Canned Goods\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Fresh Produce\",\n                    children: \"Fresh Produce\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Packaged Meals\",\n                    children: \"Packaged Meals\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Fruits & Vegetables\",\n                    children: \"Fruits & Vegetables\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Non-Perishable Items\",\n                    children: \"Non-Perishable Items\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputDescription\",\n                  className: \"form-label\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"description\",\n                  placeholder: \"Enter a description\",\n                  value: formData.description,\n                  onChange: handleInputChange,\n                  required: true,\n                  className: \"form-control\",\n                  style: {\n                    textAlign: 'left',\n                    verticalAlign: 'middle'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputQuantity\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"foodQuantity\",\n                  placeholder: \"Enter the quantity\",\n                  value: formData.foodQuantity,\n                  onChange: handleInputChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputWeight\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"foodWeight\",\n                  placeholder: \"Enter the weight\",\n                  value: formData.foodWeight,\n                  onChange: handleInputChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputPickupDateTime\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Pickup Date & Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"datetime-local\",\n                  name: \"pickupDateTime\",\n                  value: formData.pickupDateTime,\n                  onChange: handleInputChange,\n                  required: true,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"inputLocation\",\n                  className: \"form-label mb-1 mt-2\",\n                  children: \"Location (Latitude, Longitude)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"location\",\n                  placeholder: \"Enter the location coordinates\",\n                  value: formData.location,\n                  onChange: handleInputChange,\n                  required: true,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12 mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary btn-block\",\n                  onClick: () => setShowForm(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered table-hover\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [displayedColumns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: column.charAt(0).toUpperCase() + column.slice(1)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tableData.map((request, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [displayedColumns.map((column, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    textAlign: 'center',\n                    verticalAlign: 'middle'\n                  },\n                  children: request[column]\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 45\n                }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: request.location ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-link\",\n                    onClick: () => handleShowLocation(request.location.lan, request.location.lng),\n                    children: \"Show Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 49\n                  }, this) : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: getStatusButtonText(request.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n_s(RequestListing, \"ugLfluKReUcfFZK/H7Cf2iZtN2I=\");\n_c = RequestListing;\nexport default RequestListing;\nvar _c;\n$RefreshReg$(_c, \"RequestListing\");","map":{"version":3,"names":["React","useState","useEffect","getDatabase","ref","push","set","onValue","getAuth","onAuthStateChanged","DonationHeader","Footer","jsxDEV","_jsxDEV","RequestListing","dashboardView","handleLocationClick","_s","showForm","setShowForm","userName","setUserName","formData","setFormData","title","description","location","expirationDate","foodType","foodQuantity","foodWeight","pickupDateTime","tableData","setTableData","userId","setUserId","userRole","setUserRole","currentLocation","setCurrentLocation","db","requestsRef","snapshot","data","val","requestsArray","Object","entries","map","requestId","requestData","filteredRequests","filter","request","status","console","log","slice","auth","unsubscribe","user","uid","userRef","userData","account_type","capitalizeFirstLetter","first_name","str","charAt","toUpperCase","getStatusButtonText","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAccept","requestRef","find","deliveredBy","then","updatedTableData","catch","error","handlePending","receivedBy","alert","handleInputChange","e","name","value","target","lan","lng","split","coord","trim","prevData","handleShowLocation","window","open","handleFormSubmit","preventDefault","newRequestRef","currentTime","Date","donatedBy","time","toISOString","columnsForDashboard","columnsForDonationsPage","displayedColumns","className","display","justifyContent","alignItems","onClick","onSubmit","htmlFor","type","placeholder","onChange","required","disabled","hidden","textAlign","verticalAlign","column","index","colIndex","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Projects/Food-Donate-main/src/Components/DashBoard/Donations/RequestListing.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getDatabase, ref, push, set, onValue } from 'firebase/database';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport DonationHeader from \"./DonationHeader\"\nimport Footer from '../../Footer/footer'\nimport '../../css/RequestForm.css';\nimport \"../../css/donationHeader.css\"\nimport \"../../css/Request.css\"\n\nconst RequestListing = ({ dashboardView, handleLocationClick }) => {\n    const [showForm, setShowForm] = useState(false);\n    const [userName, setUserName] = useState(null);\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        location: '',\n        expirationDate: '',\n        foodType: '',\n        foodQuantity: '',\n        foodWeight: '',\n        pickupDateTime: '',\n    });\n    const [tableData, setTableData] = useState([]);\n    const [userId, setUserId] = useState(null);\n    const [userRole, setUserRole] = useState(null);\n    const [currentLocation, setCurrentLocation] = useState(null);\n\n    useEffect(() => {\n        const db = getDatabase();\n        const requestsRef = ref(db, 'donationRequests');\n\n        // Fetch data from Firebase on component mount\n        onValue(requestsRef, (snapshot) => {\n            const data = snapshot.val();\n            if (data) {\n                const requestsArray = Object.entries(data).map(([requestId, requestData]) => ({\n                    requestId,\n                    ...requestData\n                }));\n\n                // Apply filter based on status\n                const filteredRequests = requestsArray.filter(request => request.status !== \"received\");\n\n                console.log(\"Filtered Requests:\", filteredRequests);\n\n                setTableData(dashboardView ? filteredRequests.slice(-5) : requestsArray);\n            }\n        });\n    }, [dashboardView]);\n\n    useEffect(() => {\n        // Listen for changes in authentication state\n        const auth = getAuth();\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUserId(user.uid);\n                const db = getDatabase();\n                const userRef = ref(db, `users/${user.uid}`);\n                onValue(userRef, (snapshot) => {\n                    const userData = snapshot.val();\n                    console.log(userData);\n                    if (userData && userData.account_type) {\n                        setUserRole(userData.account_type);\n                        setUserName(capitalizeFirstLetter(userData.first_name));\n                    }\n                });\n            } else {\n                setUserId(null);\n                setUserRole(null);\n            }\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    function capitalizeFirstLetter(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    const getStatusButtonText = (status) => {\n        console.log(status);\n        switch (status) {\n            case \"pending\":\n                return \"Pending\";\n            case \"received\":\n                return <span style={{ color: 'green' }}>Received</span>;\n            case \"deliver\":\n                return \"To Deliver\";\n            default:\n                return \"Unknown Status\";\n        }\n    };\n\n    const handleAccept = (requestId) => {\n        if (userRole === \"volunteer\") {\n            const db = getDatabase();\n            const requestRef = ref(db, `donationRequests/${requestId}`);\n\n            set(requestRef, {\n                ...tableData.find(data => data.requestId === requestId),\n                status: \"pending\",\n                deliveredBy: userId, // Save the user ID of the volunteer who accepted\n            })\n                .then(() => {\n                    const updatedTableData = tableData.map((data) => {\n                        if (data.requestId === requestId) {\n                            return { ...data, status: \"pending\", deliveredBy: userId };\n                        }\n                        return data;\n                    });\n\n                    setTableData(updatedTableData);\n                })\n                .catch((error) => {\n                    console.error(\"Error updating status:\", error);\n                });\n        }\n    };\n\n    const handlePending = (requestId, status) => {\n        console.log('handlePending function called');\n        if (userRole === \"recipient\" && status === \"pending\") {\n            const db = getDatabase();\n            const requestRef = ref(db, `donationRequests/${requestId}`);\n\n            // Update the status to \"received\" in the database\n            set(requestRef, {\n                ...tableData.find(data => data.requestId === requestId),\n                status: \"received\",\n                receivedBy: userId, // Save the user ID of the recipient\n            })\n                .then(() => {\n                    // Remove the item from the local state only if it is a dashboard view\n                    if (dashboardView) {\n                        const updatedTableData = tableData.filter((data) => data.requestId !== requestId);\n                        setTableData(updatedTableData);\n                    }\n\n                    alert(\"Delivery received! Status updated to received.\");\n                })\n                .catch((error) => {\n                    console.error(\"Error updating status:\", error);\n                });\n        }\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n\n        if (name === 'location') {\n            const [lan, lng] = value.split(',').map(coord => coord.trim());\n            setFormData(prevData => ({\n                ...prevData,\n                location: { lan, lng },\n            }));\n            setCurrentLocation({ lan, lng });\n            console.log(lan, lng);\n        } else {\n            setFormData(prevData => ({\n                ...prevData,\n                [name]: value,\n            }));\n        }\n    };\n \n    const handleShowLocation = (lan, lng) => {\n        // Open Google Maps with the specified location\n        if (!dashboardView) {\n            window.open(`https://www.google.com/maps?q=${lan},${lng}`, '_blank');\n        }\n        // handleLocationClick(lan, lng);\n    };\n    \n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n\n        const db = getDatabase();\n        const requestsRef = ref(db, 'donationRequests');\n\n        // Add the new data to the 'requests' node in Firebase\n        const newRequestRef = push(requestsRef);\n        const currentTime = new Date();\n        set(newRequestRef, {\n            ...formData,\n            userId: userId,\n            userRole: userRole,\n            donatedBy: userId,\n            deliveredBy: \"\",\n            receivedBy: \"\",\n            status: \"deliver\",\n            time: currentTime.toISOString(),\n        });\n\n        // Reset the form data and hide the form\n        setFormData({\n            title: '',\n            description: '',\n            location: '',\n            expirationDate: '',\n            foodType: '',\n            foodQuantity: '',\n            foodWeight: '',\n            pickupDateTime: '',\n        });\n        setShowForm(false);\n    };\n\n    const columnsForDashboard = [\n        'title',\n        'description',\n        'foodType',\n        'pickupDateTime',\n    ];\n\n    const columnsForDonationsPage = [\n        'title',\n        'description',\n        'expirationDate',\n        'foodType',\n        'foodQuantity',\n        'foodWeight',\n        'pickupDateTime',\n    ];\n\n    const displayedColumns = dashboardView ? columnsForDashboard : columnsForDonationsPage;\n\n    return (\n        <div className=\"container-fluid pb-3\">\n            <div className=\"row\">\n                {!dashboardView && <DonationHeader />}\n                <div className={'col-md-12 pt-3'}>\n                    {dashboardView && (\n                        <h5 className=\"title mb-3 text-secondary\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                            Donation Requests\n                            {userRole === \"donor\" && (\n                                <button\n                                    className=\"btn btn-primary mb-3 mt-3\"\n                                    onClick={() => setShowForm(true)}\n                                >\n                                    Donate\n                                </button>\n                            )}\n                        </h5>\n                    )}\n                    {showForm && (\n                        <div className=\"form-popup\">\n                            <div className=\"form-container\">\n                                <form className=\"row g-3\" onSubmit={handleFormSubmit}>\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"inputTitle\" className=\"form-label\">Title</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"Enter a title\"\n                                            value={formData.title}\n                                            onChange={handleInputChange}\n                                            required\n                                            className='form-control'\n                                        />\n\n                                        <label htmlFor=\"inputExpirationDate\" className=\"form-label mb-1 mt-2\">Expiration Date</label>\n                                        <input\n                                            type=\"date\"\n                                            name=\"expirationDate\"\n                                            value={formData.expirationDate}\n                                            onChange={handleInputChange}\n                                            className='form-control'\n                                        />\n\n                                        <label htmlFor=\"inputFoodType\" className=\"form-label mb-1 mt-2\">Food Type</label>\n                                        <select\n                                            name=\"foodType\"\n                                            required\n                                            value={formData.foodType}\n                                            onChange={handleInputChange}\n                                            className='form-control'\n                                        >\n                                            <option value=\"\" disabled hidden>Select a food type</option>\n                                            <option value=\"Canned Goods\">Canned Goods</option>\n                                            <option value=\"Fresh Produce\">Fresh Produce</option>\n                                            <option value=\"Packaged Meals\">Packaged Meals</option>\n                                            <option value=\"Fruits & Vegetables\">Fruits & Vegetables</option>\n                                            <option value=\"Non-Perishable Items\">Non-Perishable Items</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"inputDescription\" className=\"form-label\">Description</label>\n                                        <textarea\n                                            name=\"description\"\n                                            placeholder=\"Enter a description\"\n                                            value={formData.description}\n                                            onChange={handleInputChange}\n                                            required\n                                            className='form-control'\n                                            style={{ textAlign: 'left', verticalAlign: 'middle' }}\n                                        ></textarea>\n\n                                        <label htmlFor=\"inputQuantity\" className=\"form-label mb-1 mt-2\">Quantity</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"foodQuantity\"\n                                            placeholder=\"Enter the quantity\"\n                                            value={formData.foodQuantity}\n                                            onChange={handleInputChange}\n                                            className='form-control'\n                                        />\n\n                                        <label htmlFor=\"inputWeight\" className=\"form-label mb-1 mt-2\">Weight</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"foodWeight\"\n                                            placeholder=\"Enter the weight\"\n                                            value={formData.foodWeight}\n                                            onChange={handleInputChange}\n                                            className='form-control'\n                                        />\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <label htmlFor=\"inputPickupDateTime\" className=\"form-label mb-1 mt-2\">Pickup Date & Time</label>\n                                        <input\n                                            type=\"datetime-local\"\n                                            name=\"pickupDateTime\"\n                                            value={formData.pickupDateTime}\n                                            onChange={handleInputChange}\n                                            required\n                                            className='form-control'\n                                        />\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <label htmlFor=\"inputLocation\" className=\"form-label mb-1 mt-2\">Location (Latitude, Longitude)</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"location\"\n                                            placeholder=\"Enter the location coordinates\"\n                                            value={formData.location}\n                                            onChange={handleInputChange}\n                                            required\n                                            className='form-control'\n                                        />\n                                    </div>\n                                    <div className=\"col-12 mt-3\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-primary btn-block\"\n                                        >\n                                            Submit\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-secondary btn-block\"\n                                            onClick={() => setShowForm(false)}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-bordered table-hover\">\n                            <thead>\n                                <tr>\n                                    {displayedColumns.map((column, index) => (\n                                        <th key={index} style={{ textAlign: 'center' }}>\n                                            {column.charAt(0).toUpperCase() + column.slice(1)}\n                                        </th>\n                                    ))}\n                                    <th style={{ textAlign: 'center' }}>Location</th>\n                                    <th style={{ textAlign: 'center' }}>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tableData.map((request, index) => (\n                                    <tr key={index}>\n                                        {displayedColumns.map((column, colIndex) => (\n                                            <td key={colIndex} style={{ textAlign: 'center', verticalAlign: 'middle' }}>\n                                                {request[column]}\n                                            </td>\n                                        ))}\n                                        <td style={{ textAlign: 'center' }}>\n                                            {request.location ? (\n                                                <button\n                                                    className=\"btn btn-link\"\n                                                    onClick={() => handleShowLocation(request.location.lan, request.location.lng)}\n                                                >\n                                                    Show Location\n                                                </button>\n                                            ) : (\n                                                \"N/A\"\n                                            )}\n                                        </td>\n                                        <td style={{ textAlign: 'center' }}>\n                                            {getStatusButtonText(request.status)}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default RequestListing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}